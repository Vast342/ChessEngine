#pragma once

#include "globals.h"

/*
    Piece square tables, for every square and for every piece a value is assigned.
    Those values are added up to get the final evaluation
*/

constexpr int mg_value[6] = {64, 271, 299, 375, 769, 0};
constexpr int eg_value[6] = {112, 351, 361, 627, 1187, 0};

constexpr int phaseIncrements[6] = {0, 1, 1, 2, 4, 0};

// Values tuned using Gedas' tuner

inline int mgPawnBonusTable[64] = {
0, 0, 0, 0, 0, 0, 0, 0,
72, 94, 72, 101, 85, 68, 2, -23,
-6, 7, 40, 46, 49, 70, 50, 8,
-21, 3, 6, 9, 30, 21, 25, 2,
-31, -4, -5, 11, 11, 3, 12, -10,
-33, -9, -9, -7, 7, -4, 26, -4,
-33, -8, -12, -22, -3, 12, 35, -11,
0, 0, 0, 0, 0, 0, 0, 0,
 };

inline int mgKnightBonusTable[64] = {
-145, -113, -49, -17, 14, -42, -96, -91,
-14, 3, 28, 45, 29, 90, 2, 25,
1, 34, 51, 63, 99, 100, 57, 27,
-3, 10, 34, 55, 37, 61, 20, 30,
-16, -1, 13, 14, 23, 19, 17, -6,
-35, -13, 1, 4, 15, 5, 8, -19,
-48, -36, -20, -8, -7, -5, -18, -21,
-90, -37, -50, -36, -32, -19, -35, -61,
 };

inline int mgBishopBonusTable[64] = {
-24, -42, -31, -72, -61, -43, -14, -51,
-7, 16, 10, -7, 22, 22, 13, 3,
2, 26, 26, 49, 36, 67, 43, 31,
-6, 8, 29, 39, 37, 32, 9, -5,
-12, 1, 6, 26, 23, 9, 1, -4,
-2, 5, 5, 8, 9, 4, 6, 10,
0, 1, 12, -9, -2, 11, 17, 5,
-21, -2, -17, -26, -21, -22, 3, -11,
 };

inline int mgRookBonusTable[64] = {
36, 27, 34, 39, 57, 73, 56, 76,
17, 17, 36, 55, 41, 70, 57, 87,
-3, 18, 20, 23, 51, 52, 89, 66,
-19, -5, -3, 5, 11, 12, 20, 23,
-37, -35, -25, -13, -13, -28, -5, -13,
-44, -35, -26, -27, -22, -24, 10, -11,
-47, -35, -20, -23, -19, -17, -1, -29,
-28, -27, -17, -12, -8, -18, -4, -26,
 };

inline int mgQueenBonusTable[64] = {
-37, -30, 0, 33, 34, 38, 57, 3,
-1, -22, -16, -23, -18, 19, -1, 42,
-0, -2, -4, 12, 16, 58, 58, 55,
-17, -13, -9, -10, -8, 5, 5, 11,
-15, -17, -18, -10, -11, -12, -1, 2,
-18, -10, -16, -17, -14, -6, 6, -1,
-20, -14, -4, -5, -6, 2, 8, 19,
-21, -32, -25, -9, -18, -31, -9, -16,
 };

inline int mgKingBonusTable[64] = {
34, 10, 43, -98, -43, 8, 57, 161,
-84, -44, -88, 19, -34, -28, 11, -9,
-105, -2, -70, -89, -48, 27, 8, -29,
-72, -83, -99, -144, -130, -93, -93, -116,
-67, -76, -106, -133, -130, -94, -98, -121,
-23, -8, -64, -76, -70, -67, -22, -39,
65, 24, 11, -23, -25, -7, 41, 50,
61, 84, 58, -41, 23, -17, 65, 66,
 };

inline int* mgBonusTables[6] = {
    mgPawnBonusTable,
    mgKnightBonusTable,
    mgBishopBonusTable,
    mgRookBonusTable,
    mgQueenBonusTable,
    mgKingBonusTable
};

inline int egPawnBonusTable[64] = {
0, 0, 0, 0, 0, 0, 0, 0,
171, 163, 164, 115, 111, 122, 167, 181,
112, 120, 86, 65, 57, 42, 89, 87,
43, 32, 13, 4, -5, -1, 17, 18,
19, 16, -1, -5, -7, -5, 7, -1,
13, 14, -3, 9, 2, -1, 5, -5,
17, 18, 5, 11, 16, 5, 4, -4,
0, 0, 0, 0, 0, 0, 0, 0,
};

inline int egKnightBonusTable[64] = {
-88, -27, -13, -21, -18, -41, -20, -109,
-34, -13, -5, -6, -14, -28, -17, -49,
-18, -3, 13, 14, -1, -6, -13, -28,
-7, 13, 25, 27, 28, 22, 13, -15,
-6, 3, 27, 27, 30, 20, 6, -14,
-22, -3, 6, 20, 19, 3, -8, -20,
-31, -15, -6, -2, -3, -8, -24, -20,
-38, -50, -21, -18, -17, -28, -44, -49,
 };

inline int egBishopBonusTable[64] = {
-10, 2, -1, 12, 6, -3, -10, -12,
-22, -3, 1, 4, -5, -7, 1, -24,
7, 1, 12, 1, 6, 7, -0, -0,
2, 18, 12, 26, 19, 16, 15, 2,
-2, 15, 23, 19, 19, 18, 12, -12,
-2, 8, 15, 15, 19, 16, -1, -12,
-9, -7, -10, 6, 7, -5, -2, -27,
-25, -7, -27, -5, -9, -8, -22, -37,
 };

inline int egRookBonusTable[64] = {
16, 23, 32, 28, 19, 8, 11, 6,
16, 27, 32, 23, 23, 9, 5, -9,
16, 19, 20, 19, 5, -1, -9, -14,
18, 17, 26, 22, 7, 1, -2, -8,
11, 16, 18, 17, 12, 11, -2, -7,
7, 7, 6, 11, 6, -1, -21, -21,
2, 5, 6, 8, -0, -4, -14, -8,
-3, 6, 14, 12, 5, 0, -4, -12,
 };

inline int egQueenBonusTable[64] = {
18, 32, 48, 35, 32, 25, -19, 12,
-17, 26, 60, 77, 94, 54, 38, 13,
-6, 12, 53, 55, 69, 49, 12, -0,
4, 27, 42, 65, 78, 64, 49, 28,
1, 31, 40, 59, 57, 49, 29, 16,
-10, 7, 29, 28, 31, 23, 1, -11,
-14, -11, -13, -4, -1, -27, -55, -84,
-21, -13, -10, -19, -14, -15, -45, -45,
 };

inline int egKingBonusTable[64] = {
-100, -50, -40, 10, -10, -8, -16, -122,
-7, 22, 35, 16, 37, 48, 38, 7,
9, 27, 46, 57, 56, 48, 47, 18,
-2, 33, 50, 63, 62, 56, 48, 23,
-14, 17, 41, 56, 55, 42, 30, 14,
-24, -1, 21, 33, 32, 24, 4, -8,
-46, -18, -6, 5, 8, -1, -20, -38,
-80, -61, -41, -23, -49, -25, -52, -80,
 };

inline int* egBonusTables[6] = {
    egPawnBonusTable,
    egKnightBonusTable,
    egBishopBonusTable,
    egRookBonusTable,
    egQueenBonusTable,
    egKingBonusTable
};

constexpr int mgPassedPawnBonusTable[64] = {
      0,   0,   0,   0,   0,   0,  0,   0,
    113, 100, 100, 100, 100, 100,100, 113,
     75,  67,  67,  67,  67,  67, 67,  75,
     50,  37,  37,  37,  37,  37, 37,  50,
     37,  25,  25,  25,  25,  25, 25,  37,
     20,  16,  16,  16,  16,  16, 16,  20,
     10,   7,   7,   7,   7,   7,  7,  10,
      0,   0,   0,   0,   0,   0,  0,   0,
};
constexpr int egPassedPawnBonusTable[64] = {
      0,   0,   0,   0,   0,   0,  0,   0,
    225, 200, 200, 200, 200, 200,200, 225,
    150, 125, 125, 125, 125, 125,125, 150,
    100,  75,  75,  75,  75,  75, 75, 100,
     75,  50,  50,  50,  50,  50, 50,  75,
     40,  33,  33,  33,  33,  33, 33,  40,
     20,  15,  15,  15,  15,  15, 15,  20,
      0,   0,   0,   0,   0,   0,  0,   0,
};
void computePSQTs();

extern std::array<std::array<int, 64>, 6> mgTables;
extern std::array<std::array<int, 64>, 6> egTables;

extern std::array<std::array<uint8_t, 218>, 50> reductions;